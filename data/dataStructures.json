{
    "comments": [
        "the dictionaries are tables with column i and then a column that is the singular of the table name eg name, prefix etc",
        "all the joins have column `id` and column `i`, which is foreign key to one of the dictionaries.",
        "all the other ones have `id` and the singular of the table name.",
        "The reason I put all of those non-joins separate from each other is that they either need to be able to accomodate multiple possibilities (dates) or are very sparse (notes)",
        "An interesting idea that might be stupid to accomodate the records like birthday is \"14 or 5\" is to have a row with 14 and the rest of the dataand a row with the id, nulls and 5.",
        "I just don't like that it means i canÂ´t have primary key, which is bad. That could be avoided by making it like 1A and 1B.",
        "I'll revisit that if speed is really bad with the current design "
    ],
    "dictionaries": [
        "names",
        "prefixes",
        "suffixes",
        "places",
        "ranks",
        "branches",
        "wars",
        "medallions",
        "cemeteries"
    ],
    "dataTables": [
        "id_join_last_name",
        "id_join_maiden_name",
        "id_join_first_name",
        "id_join_middle_name",
        "id_join_prefix",
        "id_join_suffix",
        "birth_day",
        "birth_month",
        "birth_year",
        "id_join_birth_place",
        "death_day",
        "death_month",
        "death_year",
        "id_join_death_place",
        "id_join_rank",
        "id_join_branch",
        "unit",
        "id_join_war",
        "entry_day",
        "entry_month",
        "entry_year",
        "exit_day",
        "exit_month",
        "exit_year",
        "id_join_medallion",
        "service_number",
        "veteran_status_verified",
        "id_join_cemetery",
        "location_in_cemetery",
        "find_a_grave_memorial_number",
        "cenotaphs",
        "notes",
        "father_name",
        "mother_name",
        "spouse_name",
        "count",
        "records_checked",
        "resident_id"
    ]
}